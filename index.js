module.exports = {
    parser: '@typescript-eslint/parser',
    plugins: [
      '@typescript-eslint',
      'fetch',
      'filenames',
      'jest',
      'jest-formatting',
      'prefer-arrow'
    ],
    extends: [
      'plugin:@typescript-eslint/eslint-recommended',
      'plugin:@typescript-eslint/recommended',
      'plugin:eslint-comments/recommended',
      'plugin:fetch/recommended',
      'plugin:import/errors',
      'plugin:import/warnings',
      'plugin:jest-formatting/recommended',
      'plugin:jest/recommended',
      'plugin:jest/style',
      "prettier/@typescript-eslint",
      "plugin:prettier/recommended"
    ],
    rules: {
        '@typescript-eslint/naming-convention': 'error',
        'no-param-reassign': 'error',
        '@typescript-eslint/no-this-alias': 'error',
        '@typescript-eslint/semi': ['error', 'never'],
        curly: ['error', 'multi-line'],
        eqeqeq: ['error', 'smart'],
        'filenames/match-regex': [
          'error',
          new RegExp(
            '(^([a-z0-9]+)([A-Z][a-z0-9]+)*(.spec|.config|.setup)?$|' +
              '^webpack-dev.config$|^webpack-inject.config$|^.eslintrc$)',
            'g'
          ),
        ],
        'eslint-comments/no-use': [
          'error',
          { allow: ['eslint-disable-next-line'] },
        ],
        'filenames/match-exported': ['error', 'camel'],
        'func-call-spacing': ['error', 'never'],
        'func-style': ['error', 'expression', { allowArrowFunctions: true }],
        'grouped-accessor-pairs': 'error',
        'id-blacklist': 'error',
        'id-match': 'error',
        indent: ['error', 2],
        'jest/no-disabled-tests': 'error',
        'jest/no-focused-tests': 'error',
        'jest/no-identical-title': 'error',
        'jest/valid-expect': 'warn',
        'max-classes-per-file': ['error', 2],
        'max-len': 'warn',
        'no-console': 'warn',
        'no-constructor-return': 'error',
        'no-duplicate-imports': 'error',
        'no-empty-function': 'error',
        'no-eval': 'error',
        'no-extra-bind': 'error',
        'no-extra-parens': ['error', 'all', { ignoreJSX: 'multi-line' }],
        'no-multi-spaces': 'error',
        'no-multi-str': 'error',
        'no-multiple-empty-lines': 'error',
        'no-new-wrappers': 'error',
        'no-restricted-globals': ['warn', 'document', 'window'],
        'no-template-curly-in-string': 'error',
        'no-trailing-spaces': 'error',
        'no-underscore-dangle': 'error',
        'no-unneeded-ternary': 'warn',
        'no-unused-vars': ['error', { argsIgnorePattern: '^_' }],
        'no-var': 'error',
        'object-shorthand': 'error',
        'one-var': ['error', 'never'],
        'prefer-arrow-callback': 'error',
        'prefer-const': 'error',
        'prefer-template': 'error',
        'quote-props': ['error', 'as-needed'],
        radix: 'error',
        'require-atomic-updates': 'error',
        'vars-on-top': 'error',
        'prefer-arrow/prefer-arrow-functions': [
          'warn',
          {
            disallowPrototype: true,
            singleReturnOnly: false,
            classPropertiesAllowed: false,
          },
        ],
        '@typescript-eslint/quotes': ['error', 'single', { avoidEscape: true }],
        'space-before-function-paren': [
          'error',
          {
            anonymous: 'always',
            named: 'never',
          },
        ],
        'spaced-comment': [
          'error',
          'always',
          {
            markers: ['/'],
          },
        ],
    }
  };